let DEBUG = false;

satAPIbaseURL = "https://www.n2yo.com/rest/v1/satellite";
apiKey = "YF4AW4-297NVD-YXBUEQ-3X95";

// var ui = new firebaseui.auth.AuthUI(firebase.auth());

// Initialize Firebase
var config = {
  apiKey: "AIzaSyA4BGdaQAQNzg71DD4Bg3b3O31IA9fl7m4",
  authDomain: "satellite-tracker-ee856.firebaseapp.com",
  databaseURL: "https://satellite-tracker-ee856.firebaseio.com",
  projectId: "satellite-tracker-ee856",
  storageBucket: "satellite-tracker-ee856.appspot.com",
  messagingSenderId: "986398204382"
};
// var defaultApp = firebase.initializeApp(config);
var db = firebase.firestore();



function updateSatInfo() {
  // get sat info
  let observer_lat = 0; //degrees
  let observer_lon = 0; //degrees
  let observer_alt = 0; // meters above sea level
  let search_radius = 180; // degrees. 0 is right above, 90 is horizon, 180 is everything
  let category_id = 28; // 0 for everything, 26 educational, 28 engineering, other categories not listed here
  let urlAddon = `above/${observer_lat}/${observer_lon}/${observer_alt}/${search_radius}/${category_id}&apiKey=${apiKey}`;
  let queryURL = `${satAPIbaseURL}/${urlAddon}`;
  if (DEBUG) console.log("queryURL: " + queryURL);
  $.ajax({
    url: queryURL,
    method: "GET"
  }).then(function (returnObj) {
    if (DEBUG) console.log(returnObj);
    let batch = db.batch();

    const timestamp = firebase.firestore.FieldValue.serverTimestamp();
    const d = new Date();
    const postId = d.getHours();
    // Generate a reference to a new location and add some data using push()
    // let postId = db.collection('satellites').push().key;

    // Get the unique ID generated by a push()
    // let postId = pushedPostRef.ref().getKey();
    let satObjArray = returnObj.above;

    if (DEBUG) console.log("processing satellites...");
    satObjArray.forEach(satObj => {
      // if (DEBUG) console.log(satObj);
      const satIntID = satObj.intDesignator;
      // if sat doesn't exist in DB: store everything except lat,lon,alt
      let satelliteDoc = db.collection("satellites").doc(satIntID);

      let keys2append = ["satalt", "satlat", "satlng"];
      let staticdata = {};
      let appendData = { timestamp: timestamp };
      for (key in satObj) {
        // if (DEBUG) console.log(key);
        if (keys2append.includes(key)) {
          appendData[key] = {};
          appendData[key][postId] = satObj[key];
        } else {
          staticdata[key] = satObj[key];
        }
      };
      if (DEBUG) console.log(staticdata);
      if (DEBUG) console.log(appendData);
      // set static sat data
      // initialize lat, lon, and alt fields
      // var setWithMerge = satellites.set(appendData);
      batch.set(satelliteDoc, appendData, { merge: true });
      // batch.update(satelliteDoc, staticdata);

      // check if lat, lon, alt have more than 1440 (1 day's worth) of 
      // measurements. Delete extra.
    });
    if (DEBUG) console.log("Finished Processing. Submitting Commit...");

    batch.commit().then(function () {
      console.log("Finished committing to Firebase!");
    }).catch(function (error) {
      console.log("Transaction failed: ", error);
    });
  }).done(function (data) {
    console.log("Ajax Exiting.");
  });

  // 0.0032 before op
  // 0.0038 after op

  // 0.0039 writes before
  // 

}


$(document).on("click", "#testbutton", updateSatInfo);